<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" minWidth="1024" minHeight="768">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import mx.messaging.events.MessageEvent;
			import mx.messaging.messages.AsyncMessage;
			import mx.utils.StringUtil;
			
			import org.granite.gravity.Consumer;
			import org.granite.gravity.Producer;
			
			
			[Bindable] private var nickname:String = "Anonymous";
			[Bindable] private var connected:Boolean = false;
			
			private var consumer:Consumer = null;
			private var producer:Producer = null;
			
			private var linesCount:int = 0;
			private var msgIndex:int = 1;
			
			private function connect():void {
				nickname = iNickname.text;
				if (nicknameValidator.validate().type === ValidationResultEvent.VALID) {
					
					consumer = new Consumer();
					consumer.destination = "gravity";
					consumer.topic = "discussion";
					consumer.subscribe();
					consumer.addEventListener(MessageEvent.MESSAGE, messageHandler);
					
					producer = new Producer();
					producer.destination = "gravity";
					producer.topic = "discussion";
					var msg:AsyncMessage = new AsyncMessage();
					msg.body = '[' + nickname + ' has just connected]';
					producer.send(msg);
					
					connected = true;
				}
			}
			
			private function disconnect():void {
				consumer.disconnect();
				consumer = null;
				
				producer.disconnect();
				producer = null;
				
				linesCount = 0
				msgIndex = 1;
				vMessages.text = "";
				connected = false;
			}
			
			private function messageHandler(event:MessageEvent):void {
				var msg:AsyncMessage = event.message as AsyncMessage;
				var message:String = msg.body as String;
				
				if (linesCount >= 20) {
					var eol:int = vMessages.text.indexOf('\r');
					vMessages.text = vMessages.text.substring(eol + 1);
				}
				
				vMessages.text += '\r' + message;
				linesCount++;
			}
			
			private function send():void {
				var message:String = StringUtil.trim(iNewMessage.text);
				if (message.length > 0) {
					var msg:AsyncMessage = new AsyncMessage();
					msg.body = '[' + nickname + ' #' + (msgIndex++) + '] ' + message;
					producer.send(msg);
				}
				iNewMessage.text = "";
			}
		]]>
	</mx:Script>
	
	<mx:StringValidator id="nicknameValidator" source="{iNickname}" property="text" minLength="4" maxLength="12" />
	
	<mx:ViewStack id="chatViewStack" selectedIndex="{connected ? 1 : 0}" resizeToContent="true">
		
		<mx:Panel id="connectingView" title="GDS Gravity Chat" verticalAlign="middle" horizontalAlign="center"
				  paddingTop="8" paddingBottom="8" titleIcon="@Embed('../resources/images/network.png')">
			<mx:Form>
				<mx:FormItem label="Nickname" required="true">
					<mx:TextInput id="iNickname" text="{nickname}" enter="connect()"/>
				</mx:FormItem>
			</mx:Form>
			<mx:ControlBar height="42" horizontalAlign="right">
				<mx:Button id="bConnect" label="Connect" click="connect()" />
			</mx:ControlBar>
		</mx:Panel>
		
		<mx:Panel id="connectedView" title="{nickname} - GDS Gravity Chat" verticalAlign="middle" horizontalAlign="center"
				  titleIcon="@Embed('../resources/images/network.png')">
			<mx:TextArea id="vMessages" width="400" height="300" editable="false" wordWrap="false">
			</mx:TextArea>
			<mx:ControlBar height="42">
				<mx:TextInput id="iNewMessage" enter="send()" width="100%"/>
				<mx:Button id="bSend" label="Send" click="send()" />
				<mx:Button id="bDisconnect" label="Quit" click="disconnect()" />
			</mx:ControlBar>
		</mx:Panel>
		
	</mx:ViewStack>
	
</mx:Application>
